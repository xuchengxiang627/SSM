<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <settings>
        <!--&lt;!&ndash;开启Mybatis的日志输出&ndash;&gt;-->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
        <!--自动将数据库中下划线转换为驼峰命名法,但只能映射一层结构，多层建议在Mapper.xml中使用resultMap-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--自动映射resultMap中的属性 此时只用写resultMap中的 id association collection-->
        <setting name="autoMappingBehavior" value="FULL"/>
    </settings>

    <typeAliases>
        <package name="com.xcx.pojo"/>
    </typeAliases>

    <!--分页插件-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <property name="helperDialect" value="mysql"/>
        </plugin>
    </plugins>



    <!--以下信息配置在javaConfig中-->

    <!--&lt;!&ndash; environments表示配置Mybatis的开发环境，可以配置多个环境，在众多具体环境中，使用default属性指定实际运行时使用的环境。default属性的取值是environment标签的id属性的值。 &ndash;&gt;-->
    <!--<environments default="development">-->
    <!--    &lt;!&ndash; environment表示配置Mybatis的一个具体的环境 &ndash;&gt;-->
    <!--    <environment id="development">-->
    <!--        &lt;!&ndash; Mybatis的内置的事务管理器 &ndash;&gt;-->
    <!--        <transactionManager type="JDBC"/>-->
    <!--        &lt;!&ndash; 配置数据源 &ndash;&gt;-->
    <!--        <dataSource type="POOLED">-->
    <!--            &lt;!&ndash; 建立数据库连接的具体信息 &ndash;&gt;-->
    <!--            <property name="driver" value="com.mysql.cj.jdbc.Driver"/>-->
    <!--            <property name="url" value="jdbc:mysql://localhost:3306/mybatis-example"/>-->
    <!--            <property name="username" value="root"/>-->
    <!--            <property name="password" value="abc123"/>-->
    <!--        </dataSource>-->
    <!--    </environment>-->
    <!--</environments>-->

    <!--<mappers>-->
    <!--    &lt;!&ndash; Mapper注册：指定Mybatis映射文件的具体位置 &ndash;&gt;-->
    <!--    &lt;!&ndash; mapper标签：配置一个具体的Mapper映射文件 &ndash;&gt;-->
    <!--    &lt;!&ndash; resource属性：指定Mapper映射文件的实际存储位置，这里需要使用一个以类路径根目录为基准的相对路径 &ndash;&gt;-->
    <!--    &lt;!&ndash;    对Maven工程的目录结构来说，resources目录下的内容会直接放入类路径，所以这里我们可以以resources目录为基准 &ndash;&gt;-->
    <!--    <mapper resource="mappers/EmployeesMapper.xml"/>-->

    <!--    &lt;!&ndash; package批量指定-->
    <!--            1. 要求Mapper.xml文件和mapper接口的命名必须相同-->
    <!--            2. 最终打包后的位置要一致-->
    <!--                    方案1：将Mapper.xml文件放在mapper接口下-->
    <!--                    方案2：将resources文件夹创建对应的文件结构  resources/com/xcx/mapper/EmployeesMapper.xml-->
    <!--     &ndash;&gt;-->
    <!--    &lt;!&ndash;<package name="com.xcx.mapper"/>&ndash;&gt;-->

    <!--</mappers>-->

</configuration>